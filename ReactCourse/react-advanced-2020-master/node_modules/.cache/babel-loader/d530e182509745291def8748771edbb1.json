{"ast":null,"code":"var _jsxFileName = \"/home/sudarshan/Desktop/React project/ReactCourse/react-advanced-2020-master/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\"; // reducer function\n\nconst reducer = (state, action) => {\n  if (action.type === \"TESTING\") {\n    const addPeople = [...state.people, action.addPeople];\n    return { ...state,\n      people: addPeople,\n      isModalOpen: true,\n      ModalContent: \"item added\"\n    };\n  }\n\n  if (action.type === \"NO_ITEM\") {\n    return { ...state,\n      isModalOpen: true,\n      ModalContent: \"please add item\"\n    };\n  }\n\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state,\n      isModalOpen: false\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const newPeople = state.people.filter(p => p.id !== action.itemId);\n    return { ...state,\n      people: newPeople\n    };\n  }\n\n  throw new Error(\"no matching action type\");\n};\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  ModalContent: \" \"\n};\n\nconst Index = () => {\n  const [name, setName] = useState(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      console.log(\"hello world\");\n      const newPeople = {\n        id: new Date().getTime().toString(),\n        name\n      };\n      dispatch({\n        type: \"TESTING\",\n        addPeople: newPeople\n      });\n      setName(\" \");\n    } else {\n      dispatch({\n        type: \"NO_ITEM\"\n      });\n    }\n  };\n\n  const removeModal = () => {\n    dispatch({\n      type: \"CLOSE_MODAL\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModalOpen && /*#__PURE__*/React.createElement(Modal, {\n    closeModal: removeModal,\n    modalContent: state.ModalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \" submit\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: person.id,\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, person.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => dispatch({\n        type: \"REMOVE_ITEM\",\n        itemId: person.id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Remove item\"));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/sudarshan/Desktop/React project/ReactCourse/react-advanced-2020-master/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","state","action","type","addPeople","people","isModalOpen","ModalContent","newPeople","filter","p","id","itemId","Error","defaultState","Index","name","setName","dispatch","handleSubmit","e","preventDefault","console","log","Date","getTime","toString","removeModal","target","value","map","person"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\";\n// reducer function\n\nconst reducer = (state, action) => {\n  if (action.type === \"TESTING\") {\n    const addPeople = [...state.people, action.addPeople];\n    return {\n      ...state,\n      people: addPeople,\n      isModalOpen: true,\n      ModalContent: \"item added\",\n    };\n  }\n  if (action.type === \"NO_ITEM\") {\n    return {\n      ...state,\n      isModalOpen: true,\n      ModalContent: \"please add item\",\n    };\n  }\n  if (action.type === \"CLOSE_MODAL\") {\n    return { ...state, isModalOpen: false };\n  }\n  if (action.type === \"REMOVE_ITEM\") {\n    const newPeople = state.people.filter((p) => p.id !== action.itemId);\n    return { ...state, people: newPeople };\n  }\n  throw new Error(\"no matching action type\");\n};\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  ModalContent: \" \",\n};\n\nconst Index = () => {\n  const [name, setName] = useState(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      console.log(\"hello world\");\n\n      const newPeople = { id: new Date().getTime().toString(), name };\n      dispatch({ type: \"TESTING\", addPeople: newPeople });\n      setName(\" \");\n    } else {\n      dispatch({ type: \"NO_ITEM\" });\n    }\n  };\n  const removeModal = () => {\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  return (\n    <>\n      {state.isModalOpen && (\n        <Modal closeModal={removeModal} modalContent={state.ModalContent} />\n      )}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <button type=\"submit\"> submit</button>\n      </form>\n      {state.people.map((person) => {\n        return (\n          <div key={person.id} className=\"item\">\n            <h2>{person.name}</h2>\n            <button\n              onClick={() =>\n                dispatch({ type: \"REMOVE_ITEM\", itemId: person.id })\n              }\n            >\n              Remove item\n            </button>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}