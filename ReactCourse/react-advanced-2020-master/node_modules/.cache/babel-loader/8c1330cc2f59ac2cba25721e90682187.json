{"ast":null,"code":"var _jsxFileName = \"/home/sudarshan/Desktop/React project/ReactCourse/react-advanced-2020-master/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\"; // reducer function\n\nconst reducer = (state, action) => {\n  if (action.type === \"TESTING\") {\n    return { ...state,\n      people: data,\n      isModalOpen: true,\n      ModalContent: \"item added\"\n    };\n  }\n\n  throw new Error(\"no matching action type\");\n};\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  ModalContent: \"hello world\"\n};\n\nconst Index = () => {\n  const [name, setName] = useState(\" \");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      const newPeople = {\n        id: new Date().getTime().toString()\n      };\n      dispatch({\n        type: \"TESTING\",\n        addPeople: name\n      });\n    } else {\n      dispatch({\n        type: \"RANDOM\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModalOpen && /*#__PURE__*/React.createElement(Modal, {\n    modalContent: state.ModalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \" submit\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }, person.name);\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/sudarshan/Desktop/React project/ReactCourse/react-advanced-2020-master/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","state","action","type","people","isModalOpen","ModalContent","Error","defaultState","Index","name","setName","dispatch","handleSubmit","e","preventDefault","newPeople","id","Date","getTime","toString","addPeople","target","value","map","person"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,WAAO,EACL,GAAGF,KADE;AAELG,MAAAA,MAAM,EAAEL,IAFH;AAGLM,MAAAA,WAAW,EAAE,IAHR;AAILC,MAAAA,YAAY,EAAE;AAJT,KAAP;AAMD;;AAED,QAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD,CAXD;;AAYA,MAAMC,YAAY,GAAG;AACnBJ,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,MAAMG,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQW,QAAR,IAAoBf,UAAU,CAACG,OAAD,EAAUQ,YAAV,CAApC;;AACA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIL,IAAJ,EAAU;AACR,YAAMM,SAAS,GAAG;AAAEC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB;AAAN,OAAlB;AAEAR,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,SAAR;AAAmBkB,QAAAA,SAAS,EAAEX;AAA9B,OAAD,CAAR;AACD,KAJD,MAIO;AACLE,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GATD;;AAWA,sBACE,0CACGF,KAAK,CAACI,WAAN,iBAAqB,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEJ,KAAK,CAACK,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,eAEE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEH,IAFT;AAGE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACQ,MAAF,CAASC,KAAV,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CAFF,EAUGtB,KAAK,CAACG,MAAN,CAAaoB,GAAb,CAAkBC,MAAD,IAAY;AAC5B,wBAAO;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACR,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBQ,MAAM,CAACf,IAA5B,CAAP;AACD,GAFA,CAVH,CADF;AAgBD,CA9BD;;AAgCA,eAAeD,KAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\";\n// reducer function\n\nconst reducer = (state, action) => {\n  if (action.type === \"TESTING\") {\n    return {\n      ...state,\n      people: data,\n      isModalOpen: true,\n      ModalContent: \"item added\",\n    };\n  }\n\n  throw new Error(\"no matching action type\");\n};\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  ModalContent: \"hello world\",\n};\n\nconst Index = () => {\n  const [name, setName] = useState(\" \");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      const newPeople = { id: new Date().getTime().toString() };\n\n      dispatch({ type: \"TESTING\", addPeople: name });\n    } else {\n      dispatch({ type: \"RANDOM\" });\n    }\n  };\n\n  return (\n    <>\n      {state.isModalOpen && <Modal modalContent={state.ModalContent} />}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <button type=\"submit\"> submit</button>\n      </form>\n      {state.people.map((person) => {\n        return <h2 key={person.id}>{person.name}</h2>;\n      })}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}