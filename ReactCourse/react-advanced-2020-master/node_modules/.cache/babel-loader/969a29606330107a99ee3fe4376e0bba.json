{"ast":null,"code":"var _jsxFileName = \"/home/sudarshan/Desktop/React project/ReactCourse/react-advanced-2020-master/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\"; // reducer function\n\nconst Index = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [person, setPerson] = useState(data);\n  const [name, setName] = useState(\" \");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      setShowModal(true);\n      setPerson({ ...person,\n        id: new Date().getTime().toString()\n      });\n    } else {\n      setShowModal(true);\n    }\n\n    setName(\" \");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showModal && /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \" submit\")), data.map(person => {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }, person.name);\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/sudarshan/Desktop/React project/ReactCourse/react-advanced-2020-master/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","Index","showModal","setShowModal","person","setPerson","name","setName","handleSubmit","e","preventDefault","id","Date","getTime","toString","target","value","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACG,IAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,GAAD,CAAhC;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAJ,EAAU;AACRH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaO,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB;AAAjB,OAAD,CAAT;AACD,KAHD,MAGO;AACLX,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACDI,IAAAA,OAAO,CAAC,GAAD,CAAP;AACD,GATD;;AAWA,sBACE,0CACGL,SAAS,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,eAEE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEF,IAFT;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CAFF,EAUGhB,IAAI,CAACiB,GAAL,CAAUb,MAAD,IAAY;AACpB,wBAAO;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACO,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBP,MAAM,CAACE,IAA5B,CAAP;AACD,GAFA,CAVH,CADF;AAgBD,CAhCD;;AAkCA,eAAeL,KAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\";\n// reducer function\n\nconst Index = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [person, setPerson] = useState(data);\n  const [name, setName] = useState(\" \");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      setShowModal(true);\n      setPerson({ ...person, id: new Date().getTime().toString() });\n    } else {\n      setShowModal(true);\n    }\n    setName(\" \");\n  };\n\n  return (\n    <>\n      {showModal && <Modal />}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <button type=\"submit\"> submit</button>\n      </form>\n      {data.map((person) => {\n        return <h2 key={person.id}>{person.name}</h2>;\n      })}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}